# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input ActionExecutionMessageInput {
  arguments: String!
  name: String!
  scope: ActionExecutionScope!
}

type ActionExecutionMessageOutput implements BaseMessageOutput {
  arguments: [String!]!
  createdAt: DateTimeISO!
  id: String!
  name: String!
  scope: ActionExecutionScope!
  status: MessageStatus!
}

"""The scope of the action"""
enum ActionExecutionScope {
  client
  server
}

input ActionInput {
  description: String!
  jsonSchema: String!
  name: String!
}

interface BaseMessageOutput {
  createdAt: DateTimeISO!
  id: String!
  status: MessageStatus!
}

input CloudInput {
  guardrails: GuardrailsInput!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

input FrontendInput {
  actions: [ActionInput!]!
  toDeprecate_fullContext: String
}

input GenerateResponseInput {
  cloud: CloudInput
  frontend: FrontendInput!
  messages: [MessageInput!]!
  runId: String
  threadId: String
}

type GeneratedResponse {
  interruption: GenerationInterruption!
  messages: [BaseMessageOutput!]!
  runId: String
  threadId: String!
}

type GenerationInterruption {
  interrupted: Boolean!
  reason: String
}

input GuardrailsInput {
  inputValidationRules: [GuardrailsRuleInput!] = []
}

input GuardrailsRuleInput {
  allowList: [String!] = []
  denyList: [String!] = []
  id: String!
}

input MessageInput {
  actionExecutionMessage: ActionExecutionMessageInput
  createdAt: DateTimeISO!
  id: String!
  resultMessage: ResultMessageInput
  textMessage: TextMessageInput
}

"""The role of the message"""
enum MessageRole {
  assistant
  system
  user
}

type MessageStatus {
  isDoneStreaming: Boolean!
}

type Mutation {
  generateResponse(data: GenerateResponseInput!): GeneratedResponse!
}

type Query {
  hello: String!
}

input ResultMessageInput {
  actionExecutionId: String!
  actionName: String!
  result: String!
}

type ResultMessageOutput implements BaseMessageOutput {
  actionExecutionId: String!
  actionName: String!
  createdAt: DateTimeISO!
  id: String!
  result: String!
  status: MessageStatus!
}

input TextMessageInput {
  content: String!
  role: MessageRole!
}

type TextMessageOutput implements BaseMessageOutput {
  content: [String!]!
  createdAt: DateTimeISO!
  id: String!
  role: MessageRole!
  status: MessageStatus!
}